- name: get remote dashboard {{ dash.title }} [{{ dash.id }}] {{ dash.uri }}
  uri:
    url: "{{ grafana_url }}/api/dashboards/{{ dash.uri }}"
    user: "{{ grafana_username }}"
    password: "{{ grafana_password }}"
    force_basic_auth: yes
    body_format: json
    method: GET
    return_content: yes
    headers:
      Content-Type: "application/json;charset=UTF-8"
  register: dashboard
  changed_when: no
  # failed_when: false
  
- name: fail on duplicate remote dashboard ID
  fail: msg="'{{ dash.title }}' ({{ dash.uri }})
             and '{{ remote_dashboards_by_id[dash.id].dashboard.title }}'
             ({{ local_dashboards_by_id[dash.id].path }}) dashboards have the same ID"
  when: dash.id in remote_dashboards_by_id.keys()
  
- name: add {{ dash.title }} to remote_dashboards_by_id[{{ dash.id }}]
  set_fact:
    remote_dashboards_by_id: "{{ remote_dashboards_by_id|combine({ dash.id: {'path': dash.uri, 'dashboard': dashboard.json.dashboard }}) }}"
